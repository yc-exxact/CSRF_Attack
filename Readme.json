{
    "title": "CSRF Attack Demonstration with Flask",
    "description": "This project demonstrates a Cross-Site Request Forgery (CSRF) attack using a Flask web application. The goal is to illustrate how CSRF works and how attackers can exploit vulnerabilities to perform unauthorized actions on behalf of authenticated users.",
    "features": [
        "User Authentication: Sign up and log in with session handling.",
        "Simulated CSRF Attack: Demonstrates password change exploitation via a hidden form.",
        "Email Notification: Sends an email to notify users about suspicious activity.",
        "Themed UI: A 'Diable' theme with custom styling for added engagement."
    ],
    "prerequisites": [
        "Python: Install Python 3.12 or higher.",
        "Docker: Ensure Docker is installed on your system.",
        "Email Server: Use a Gmail account for sending emails."
    ],
    "installation": {
        "option_1": {
            "description": "Clone the Repository and Build the Image",
            "steps": [
                "Clone the Repository: git clone https://github.com/yc-exxact/CSRF_Attack.git",
                "Navigate to the folder: cd CSRF_Attack",
                "Build the Docker image: docker build -t csrf_attack_demo .",
                "Run the container: docker run -p 5005:5005 csrf_attack_demo"
            ]
        },
        "option_2": {
            "description": "Use Prebuilt Docker Image",
            "steps": [
                "Pull the Prebuilt Image: docker pull eddycaron/diable:csrf2025",
                "Run the Container: docker run -p 5005:5005 eddycaron/diable:csrf2025"
            ]
        }
    },
    "usage": [
        "Access the Application: Open http://localhost:5005 in your browser.",
        "Create an Account: Click on 'Sign Up,' fill in your details, and submit.",
        "Log In: Use your email and password to log in. Upon login, an email will be sent to your address.",
        "Simulate the CSRF Attack: Open the email and click on the link. The link directs you to a page containing a hidden form that automatically submits a password change request. The password will be changed to 'newpassword123'.",
        "Observe the Result: Check the Flask console logs to see the CSRF activity and password change. Log in again with the new password to verify the attack."
    ]
}
