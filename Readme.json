{
    "title": "CSRF Attack Demonstration with Flask",
    "overview": "Ce guide vous accompagne dans l'installation et l'exploitation d'une application Flask vulnérable aux attaques Cross-Site Request Forgery (CSRF). Cette démonstration illustre comment une vulnérabilité CSRF peut être exploitée pour modifier le mot de passe d'un utilisateur authentifié à son insu.",
    "warning": "⚠️ Avertissement : Ce guide est destiné uniquement à des fins éducatives dans un environnement contrôlé. L'exploitation non autorisée de vulnérabilités est illégale.",
    "prerequisites": {
      "python": {
        "description": "Installation de Python 3",
        "check": "python3 --version",
        "download": "https://www.python.org/"
      },
      "docker": {
        "description": "Installation de Docker",
        "check": "docker --version",
        "documentation": "https://docs.docker.com/get-docker/"
      },
      "email_server": "Un compte Gmail est requis pour envoyer des emails dans l'application."
    },
    "installation": {
      "step1": {
        "description": "Cloner le dépôt GitHub",
        "commands": [
          "git clone https://github.com/yc-exxact/CSRF_Attack.git",
          "cd CSRF_Attack"
        ]
      },

      "step2": {
        "build": "docker build -t csrf_attack_demo .",
        "run": "docker run -p 5005:5005 csrf_attack_demo"
      },
      "alternative": {
        "pull": "docker pull eddycaron/diable:csrf2025",
        "run": "docker run -p 5005:5005 eddycaron/diable:csrf2025"
      }
    },
    "usage": {
      "access": "http://localhost:5005",
      "create_account": "Inscription avec email et mot de passe",
      "login": "Connexion avec email et mot de passe",
      "csrf_attack": "Cliquez sur le lien reçu dans l'email pour déclencher l'attaque",
      "verification": "Vérifiez dans les logs Flask et essayez de vous reconnecter avec 'newpassword123'"
    },
    "impact": {
      "identity_theft": "Un attaquant peut forcer un utilisateur authentifié à exécuter des actions malveillantes.",
      "unauthorized_access": "Modification de données sensibles comme le mot de passe utilisateur.",
      "security_risks": "Exploitation de la confiance accordée aux utilisateurs authentifiés."
    },
    "mitigation": {
      "csrf_tokens": "Utiliser des jetons CSRF pour valider l'origine des requêtes.",
      "origin_verification": "Vérifier les en-têtes 'Referer' et 'Origin'.",
      "secure_http_methods": "Limiter les actions sensibles aux méthodes HTTP sécurisées."
    },
    "conclusion": "Cette démonstration illustre comment une attaque CSRF peut être réalisée et pourquoi il est crucial de mettre en place des protections adéquates. Ne testez jamais ces attaques sans autorisation légale."
  }
  